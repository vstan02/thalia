root ::= <WS> expr_root <WS>
expr_root ::= expr_unary
expr_unary ::= expr_primary | (MINUS | BANG <WS> expr_unary)
expr_primary ::= ID | INT | (LPAREN <WS> expr_root <WS> RPAREN)

<token> ::= PROGRAM
          | LET
          | CONST
          | DBL_AMPER
          | DBL_PIPE
          | EQU_EQU
          | BNG_EQU
          | GRT_EQU
          | LSS_EQU
          | PLUS
          | MINUS
          | STAR
          | SLASH
          | PERCENT
          | BANG
          | EQUAL
          | LESS
          | GRTR
          | DOT
          | COMMA
          | COLON
          | SEMI
          | LPAREN
          | RPAREN
          | LBRACE
          | RBRACE
          | INT
          | ID

PROGRAM ::= 'program'
LET ::= 'let'
CONST ::= 'const'

DBL_AMPER ::= '&&'
DBL_PIPE ::= '||'
EQU_EQU ::= '=='
BNG_EQU ::= '!='
GRT_EQU ::= '>='
LSS_EQU ::= '<='

PLUS ::= '+'
MINUS ::= '-'
STAR ::= '*'
SLASH ::= '/'
PERCENT ::= '%'
BANG ::= '!'
EQUAL ::= '='
LESS ::= '<'
GRTR ::= '>'
DOT ::= '.'
COMMA ::= ','
COLON ::= ':'
SEMI ::= ';'
LPAREN ::= '('
RPAREN ::= ')'
LBRACE ::= '{'
RBRACE ::= '}'

ID ::= #'[a-zA-Z_][a-zA-Z_0-9]*'
INT ::= #'[0-9]+'

WS ::= #'\s*'
